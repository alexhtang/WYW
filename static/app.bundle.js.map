{"version":3,"sources":["webpack:///./src/App.jsx"],"names":["contentNode","document","getElementById","BodyRow","props","userData","height","weight","age","activity","gender","BodyStats","bodyData","bodystats","map","index","textAlign","fontFamily","marginLeft","NutritionStats","fontStyle","fontSize","color","calories","React","Component","AddBodyInfo","handleSubmit","bind","e","preventDefault","form","forms","updateBodyStat","update","value","borderRadius","marginRight","calculate","h","w","g","suggested","parseInt","inches","charAt","substring","length","Math","round","FitnessTracker","state","loadData","fetch","then","response","ok","json","setState","data","records","alert","error","message","catch","err","userInput","method","headers","body","JSON","stringify","res","updatedStat","paddingBottom","ReactDOM","render"],"mappings":"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","file":"static/app.bundle.js","sourcesContent":["\n\nconst contentNode = document.getElementById('contents');\n\nconst BodyRow = (props) => (\n  <tr>\n    <td>{props.userData.height}</td>\n    <td>{props.userData.weight}</td>\n    <td>{props.userData.age}</td>\n    <td>{props.userData.activity}</td>\n    <td>{props.userData.gender}</td>\n  </tr>\n);\n\nfunction BodyStats(props) {\n  const bodyData = props.bodystats.map((userData, index) => (\n    <BodyRow key={index} userData={userData} />\n  ));\n  return (\n    <div style={{textAlign: 'center'}}>\n    <table style={{fontFamily: 'Bookman Old Style', marginLeft: '37%'}}>\n      <thead>\n        <tr>\n          <th>Height</th>\n          <th>Weight</th>\n          <th>Age</th>\n          <th>Activity</th>\n          <th>Gender</th>\n        </tr>\n      </thead>\n      <tbody>{bodyData}</tbody>\n    </table>\n    </div>\n  );\n}\n\nclass NutritionStats extends React.Component {\n\n  render() {\n    return (\n      <div style = {{fontFamily: 'Bookman Old Style', fontStyle: 'bold', fontSize: '25px', textAlign: 'center'}}>\n        <h1 >Suggested Caloric Intake: </h1>\n        <h1 style= {{color: 'green'}}>{this.props.calories}</h1>\n      </div>\n      )\n  }\n}\n\nclass AddBodyInfo extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleSubmit(e) {\n        e.preventDefault();\n        const form = document.forms.updateBodyStat;\n        this.props.update({\n          height: (form.height.value),\n          weight: form.weight.value,\n          age: form.age.value,\n          activity: form.activity.value,\n          gender: form.gender.value\n        });\n        // clear the form for the next input\n        form.height.value = \"\"; form.weight.value = \"\"; form.age.value = \"\"; form.activity.value= \"\"; form.gender.value = \"\";\n      }\n    \n      render() {\n        return (\n          <div>\n            <form style={{fontFamily: 'Bookman Old Style'}} name=\"updateBodyStat\" onSubmit={this.handleSubmit}>\n              <input type=\"text\" name=\"height\" maxLength = \"4\" placeholder=\"Height (ft'inches)\" style = {{borderRadius: '5px'}} />\n              <input type=\"text\" name=\"weight\" maxLength = \"3\" placeholder=\"Weight (lbs)\" style = {{borderRadius: '5px'}}/>\n              <input type=\"text\" name=\"age\" maxLength = \"2\" placeholder=\"Age\" style = {{borderRadius: '5px'}}/><hr></hr>\n              <label name=\"activity\">Activity Level:</label>\n              <select style={{marginRight:'20px'}} name = \"activity\">\n                <option>Light</option>\n                <option>Moderate</option>\n                <option>Vigorous</option>\n              </select>\n              <label name=\"gender\">Biological Gender:</label>\n              <select name = \"gender\">\n                <option>Male</option>\n                <option>Female</option>\n              </select>\n              <button style={{borderRadius: '5px'}}>Update</button>\n            </form>\n          </div>\n        )\n      }\n}\n\nfunction calculate(h, w, age, g, activity){\n  let suggested = 0;\n  w = parseInt(w);\n  age = parseInt(age);\n  const inches = parseInt(h.charAt(0)) * 12 + parseInt(h.substring(2, h.length));\n  if(g === 'Male'){\n    suggested = 66 + ( 6.2 * w ) + ( 12.7 * inches) - ( 6.76 * age);\n    if(activity === 'Light'){\n      suggested = suggested*1.53;\n    }\n    if(activity === 'Moderate'){\n      suggested = suggested*1.76;\n    }\n    if(activity === 'Vigorous'){\n      suggested = suggested*2.25;\n    }\n  }\n  else{\n    suggested = 655.1 + ( 4.35 * w) + ( 4.7 * inches) - ( 4.7 * age);\n    if(activity === 'Light'){\n      suggested = suggested*1.53;\n    }\n    if(activity === 'Moderate'){\n      suggested = suggested*1.76;\n    }\n    if(activity === 'Vigorous'){\n      suggested = suggested*2.25;\n    }\n  }\n  \n  return Math.round(suggested);\n}\n\nclass FitnessTracker extends React.Component {\n  constructor() {\n    super();\n    this.state = { bodystats: [], calories: 0 };\n    this.update = this.update.bind(this);\n    //this.calculate = this.calculate.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  //Grabs data from server\n  loadData() {\n    fetch('/api/data').then(response => {\n      if (response.ok) {                        //Returns whether there was a successful response\n        response.json().then(data => {          //Parses the body of the response as a JSON\n          this.setState({ bodystats: data.records });     //Adds the saved data to the state on the load\n          this.state.calories = calculate(this.state.bodystats[0].height, this.state.bodystats[0].weight, this.state.bodystats[0].age, this.state.bodystats[0].gender, this.state.bodystats[0].activity);\n          this.setState({calories: this.state.calories});\n        });\n      } else {\n        response.json().then(error => {         //If the response failed, returns an error\n          alert(\"Failed to fetch bodyStat:\" + error.message)\n        });\n      }\n    }).catch(err => {\n      alert(\"Error in fetching data from server:\", err);\n    });\n  }\n  \n  \n\n  //Updates User Body Stats\n  update(userInput) {\n    fetch('/api/data', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(userInput),\n    })\n      .then(res => {  \n        if (res.ok) {\n          res.json()\n            .then(updatedStat => {\n              this.state.bodystats[0] = updatedStat\n              this.setState({ bodystats: this.state.bodystats });\n              this.state.calories = calculate(this.state.bodystats[0].height, this.state.bodystats[0].weight, this.state.bodystats[0].age, this.state.bodystats[0].gender, this.state.bodystats[0].activity);\n              this.setState({calories: this.state.calories});\n            });\n        }\n        else {\n          res.json()\n            .then(error => {\n              alert('Failed to add update: ' + error.message);\n            });\n        }\n      });\n  }\n  \n\n  render() {\n    \n    return (\n      <div style = {{textAlign: \"center\"}}>\n        <h1 style={{fontStyle: 'bold', fontSize: '100', fontFamily: 'Bookman Old Style', paddingBottom: '50px'}}>Calorie Calculator</h1>\n        <BodyStats bodystats = {this.state.bodystats} />\n        <hr />\n        <AddBodyInfo update = {this.update} />\n        <hr />\n        <NutritionStats calories = {this.state.calories}/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<FitnessTracker />, contentNode);  // Render the component inside the content Node\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx"],"sourceRoot":""}